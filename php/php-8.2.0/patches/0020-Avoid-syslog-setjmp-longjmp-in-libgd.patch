From 76d860faf9a37759c7f751ec89f909c4d06ee77b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jesu=CC=81s=20Gonza=CC=81lez?= <jesusgm@vmware.com>
Date: Tue, 14 Feb 2023 19:09:34 +0100
Subject: [PATCH] fix: Avoid `#include <syslog.h>` since it is not part of
 wasi-libc

---
 ext/gd/libgd/gd_errors.h | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/ext/gd/libgd/gd_errors.h b/ext/gd/libgd/gd_errors.h
index 8a28bf6051..e84cef4578 100644
--- a/ext/gd/libgd/gd_errors.h
+++ b/ext/gd/libgd/gd_errors.h
@@ -1,11 +1,13 @@
 #ifndef GD_ERRORS_H
 #define GD_ERRORS_H
 
-#ifndef _WIN32
-# include <syslog.h>
-#else
-# include "win32/syslog.h"
-#endif
+#ifndef __wasi__
+    #ifndef _WIN32
+    # include <syslog.h>
+    #else
+    # include "win32/syslog.h"
+    #endif
+#endif /* __wasi__ */
 
 /*
 LOG_EMERG      system is unusable
-- 
2.37.0

From c358ee5ae65774cbe9318d511a3ef90fa5079ebd Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jesu=CC=81s=20Gonza=CC=81lez?= <jesusgm@vmware.com>
Date: Tue, 14 Feb 2023 19:10:15 +0100
Subject: [PATCH] fix: Avoid setjmp/longjmp in `gd_jpeg`

---
 ext/gd/libgd/gd_jpeg.c | 44 +++++++++++++++++++++++++-----------------
 1 file changed, 26 insertions(+), 18 deletions(-)

diff --git a/ext/gd/libgd/gd_jpeg.c b/ext/gd/libgd/gd_jpeg.c
index f0974c2a99..f3aa695967 100644
--- a/ext/gd/libgd/gd_jpeg.c
+++ b/ext/gd/libgd/gd_jpeg.c
@@ -23,7 +23,9 @@
 
 #include <stdio.h>
 #include <stdlib.h>
-#include <setjmp.h>
+#ifndef __wasi__
+	#include <setjmp.h>
+#endif
 #include <limits.h>
 #include <string.h>
 
@@ -97,8 +99,10 @@ static void fatal_jpeg_error (j_common_ptr cinfo)
 	jpeg_destroy (cinfo);
 
 	if (jmpbufw != 0) {
-		longjmp (jmpbufw->jmpbuf, 1);
-		gd_error_ex(GD_ERROR, "gd-jpeg: EXTREMELY fatal error: longjmp returned control; terminating");
+		#ifndef __wasi__
+			longjmp (jmpbufw->jmpbuf, 1);
+			gd_error_ex(GD_ERROR, "gd-jpeg: EXTREMELY fatal error: longjmp returned control; terminating");
+		#endif
 	} else {
 		gd_error_ex(GD_ERROR, "gd-jpeg: EXTREMELY fatal error: jmpbuf unrecoverable; terminating");
 	}
@@ -187,13 +191,15 @@ static int _gdImageJpegCtx(gdImagePtr im, gdIOCtx *outfile, int quality)
 
 	cinfo.err = jpeg_std_error (&jerr);
 	cinfo.client_data = &jmpbufw;
-	if (setjmp (jmpbufw.jmpbuf) != 0) {
-		/* we're here courtesy of longjmp */
-		if (row) {
-			gdFree (row);
+	#ifndef __wasi__
+		if (setjmp (jmpbufw.jmpbuf) != 0) {
+			/* we're here courtesy of longjmp */
+			if (row) {
+				gdFree (row);
+			}
+			return 1;
 		}
-		return 1;
-	}
+	#endif
 
 	cinfo.err->error_exit = fatal_jpeg_error;
 
@@ -356,16 +362,18 @@ gdImagePtr gdImageCreateFromJpegCtxEx (gdIOCtx * infile, int ignore_warning)
 	cinfo.client_data = &jmpbufw;
 	cinfo.err->emit_message = php_jpeg_emit_message;
 
-	if (setjmp (jmpbufw.jmpbuf) != 0) {
-		/* we're here courtesy of longjmp */
-		if (row) {
-			gdFree (row);
-		}
-		if (im) {
-			gdImageDestroy (im);
+	#ifndef __wasi__
+		if (setjmp (jmpbufw.jmpbuf) != 0) {
+			/* we're here courtesy of longjmp */
+			if (row) {
+				gdFree (row);
+			}
+			if (im) {
+				gdImageDestroy (im);
+			}
+			return 0;
 		}
-		return 0;
-	}
+	#endif
 
 	cinfo.err->error_exit = fatal_jpeg_error;
 
-- 
2.37.0

From c5c69d06cbb00a4b30c4042636a6fe285debd8f3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jesu=CC=81s=20Gonza=CC=81lez?= <jesusgm@vmware.com>
Date: Tue, 14 Feb 2023 22:01:33 +0100
Subject: [PATCH] fix: Avoid tmpfile() in `gd_bmp`

---
 ext/gd/libgd/gd_bmp.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/ext/gd/libgd/gd_bmp.c b/ext/gd/libgd/gd_bmp.c
index 00903d5ff8..b7a9121d15 100644
--- a/ext/gd/libgd/gd_bmp.c
+++ b/ext/gd/libgd/gd_bmp.c
@@ -102,9 +102,15 @@ void gdImageBmpCtx(gdImagePtr im, gdIOCtxPtr out, int compression)
 		compression = 0;
 	}
 
-	if (compression == 1 && !out->seek) {
+	if (compression == 1 && !out->seek) {		
 		/* Try to create a temp file where we can seek */
-		if ((tmpfile_for_compression = tmpfile()) == NULL) {
+		if ((tmpfile_for_compression =
+#ifdef __wasi__		
+		NULL
+#else 
+	   tmpfile()
+#endif /* __wasi__ */
+			) == NULL) {
 			compression = 0;
 		} else {
 			out_original = out;
-- 
2.37.0

